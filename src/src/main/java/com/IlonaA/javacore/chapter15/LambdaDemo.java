package src.main.java.com.IlonaA.javacore.chapter15;

//функциональный интерфейс
interface MyNumber{
    double getValue();
}
public class LambdaDemo {
    public static void main(String[] args) {
      //  MyNumber myNum; // объявить ссылку на функциональный интерфейс
        //Здесь лямба выражение просто является константным выражением когда оно присваивается ссылочной переменной myNum получается
        //экземпляр класса в котором лямбада выражение реализует метод getValue() из функционального интерфейса
       // myNum = () -> 123.45; // создается абстрактный класс которые имплементирует интерфейс MyNumber
        //вызвать метод предоставляемый присвоенным ранее лямбда выражением
       // System.out.println("Фиксированные значение: " + myNum.getValue());
        MyNumber myNum;
        myNum = () -> 123.45;
        System.out.println("Фиксированные значение: " + myNum.getValue());

        //А здест ипользуется более сложное выражение
        myNum = () -> Math.random()*100;
        //В следующих строках кода вызывается лямбда выражение из предыдущей строки кода
        System.out.println("Случайное значение: " + myNum.getValue());
        System.out.println("Еще одно случайное значение: " + myNum.getValue());
        //Лямбда выражение должно быть совместимо с абстрактным методом определенным в функциоеналльном интерфейсе
        // поэтому следующая строка ошибочная
        //myNum = () -> "123.03";// ОШИБКА
    }
}
